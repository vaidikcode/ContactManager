spring.application.name=scm
server.port:8081

#mysql data configurations

spring.datasource.url=jdbc:mysql://localhost:3306/scm20
spring.datasource.username=root
spring.datasource.password=Vaidik@2005

#jpa configurations
spring.jpa.show-sql=true
#for automatically creating schemas and tables
spring.jpa.hibernate.ddl-auto=update

#Spring security will direct everything to login page as it need to secure the routes
#To change or stop the auto generation of login password for accessing the secure routes we can hardcode these values
spring.security.user.name=Vaidik
spring.security.user.password=Vaidik@2005

#oauth2 client configurations
#google login
spring.security.oauth2.client.registration.google.client-name=google
spring.security.oauth2.client.registration.google.client-id=25490298059-991v23m3dhp99cjm269ameg2n7eetvkc.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.scope=email,profile

#github login
spring.security.oauth2.client.registration.github.client-name=github
spring.security.oauth2.client.registration.github.client-id=Iv23liQ6tSI04ddtXhjM
spring.security.oauth2.client.registration.github.client-secret=2bcc8ce9e28e599ec7fd1d98fc010d2e8020733a
spring.security.oauth2.client.registration.github.scope=email,profile